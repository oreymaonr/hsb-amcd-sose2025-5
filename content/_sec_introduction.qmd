# Introduction

Second order filters (or	biquard	filters) are important since	they are	the	building blocks in the construction of $N^{th}$ order	filters, for $N > 2$. When $N$ is odd the $N^{th}$ order filter can be realised using $\frac{N-1}{2}$ second order filters and one first order filters. When  $N$ is even, we need $N-1$ second order filters. 

Second order filters can be used to construct four different types of filters. The transfer function of four different filters is shown in [table 1](#table-1--transfer-functions), where $W_0 = 1/RC$ and $H_0$ is the low frequency gain of transfer function. The philtre names are often abbreviated as BPF(Bandpass filter), HPF(Highpass Filter), LPF(Lowpass Filter), BSF(Bandstop Filter).

### Table 1 : Transfer Functions

|Filter Type |Transfer Function |
|------------|------------|
|Low Pass Filter | $\frac{V_{03}}{V_i} = \frac{H_0}{(1+\frac{s}{w_0 Q}+\frac{s^2}{w_0^2})}$|
|High Pass Filter | $\frac{V_{01}}{V_i} = \frac{H_0\frac{s^2}{w_0^2}}{(1+\frac{s}{w_0 Q}+\frac{s^2}{w_0^2})}$|
|Band Pass Filter | $\frac{V_{02}}{V_i} = \frac{-H_0\frac{s}{w_0}}{(1+\frac{s}{w_0 Q}+\frac{s^2}{w_0^2})}$|
|Band Stop Filter | $\frac{V_{04}}{V_i} = \frac{(1 + \frac{s^2}{w_0^2})H_0}{(1+\frac{s}{w_0 Q}+\frac{s^2}{w_0^2})}$|

## Objective

The objective of this report is to design a biquad filter with the $frequency = 1000 Hz$ and $Q = 10$.

#### Analysis

1. from Eq.1 we get, $B.W$ = $\frac{f_0}{Q}$= $\frac{1000}{10}$=100Hz
2. we substitute $\omega_0$ = $2\pi f_0$
3. from the above equations we calculate all values and store the available capacitor values in `clist` of the below python code. Note that the capacitance value is in $\mu F$
4. $R_3$ is choosen arbitarily so as to not load down the second or the third op-amp

```{python}
#basic tow thomas
import numpy as np
import ltspice
import matplotlib.pyplot as plt

def bandPassFilterTowThomas(f_0,Q,A_mid,clist):
    for c in clist:
        print("For C: ",c)
        c=c*10e-6 #in microFarard        
        w_0 = 2*np.pi*f_0
        #Q=10 #quality factor
        #A_mid = 20 #midband gain
        k = 10**-3
        R = 1/(w_0*c)
        print(f"\t R : {R*10e-3} kOhm")
        R_2 = Q*R
        print(f"\t R_2 : {R_2*10e-3} kOhm")   
        R_1 = R*Q/A_mid
        print(f"\t R_1 : {R_1*10e-3} kOhm")
clist=[0.01,0.1,0.2,1,0.0027]
bandPassFilterTowThomas(1000,10,20,clist) #some
```
