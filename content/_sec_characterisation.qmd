# Characterisation

The small signal ac analysis and transcient analysis for ideal, theoretical and practical scenario is plotted here.

The plots are made in python with the help of `matplotlib` package of python. 

## Small signal ac analysis

### ideal circuit

```{python}

import plotfn as fn

filename =  r"C:\Users\91854\Documents\Study Materials\summer25\amcd-shared-repo\hsb-amcd-sose2025-5\content\RAW\idealGraphs.csv"
bpf_title = 'Frequency Response of BPF (Gain and Phase)'
bsf_title = 'Frequency Response of BSF (Gain and Phase)'
lpf_title = 'Frequency Response of LPF (Gain and Phase)'
hpf_title = 'Frequency Response of HPF (Gain and Phase)'
filters = {
    bpf_title : [0,1,2],
    bsf_title : [0,3,4],
    hpf_title : [0,5,6],
    lpf_title : [0,7,8]
}
for title_internal,attributes in filters.items():    
    fn.freqAnalysisPlot(
        title = title_internal,
        graphsFilename = filename,
        cols = attributes,
        seperator = ';'
    )

```
### real circuit
### practical circuit
```{python}

import plotfn as fn

lpf_filename =  r"C:\Users\91854\Documents\Study Materials\summer25\amcd-shared-repo\hsb-amcd-sose2025-5\content\RAW\redpitayaGraphs\LPF.csv"
hpf_filename =  r"C:\Users\91854\Documents\Study Materials\summer25\amcd-shared-repo\hsb-amcd-sose2025-5\content\RAW\redpitayaGraphs\HPF.csv"
bsf_filename =  r"C:\Users\91854\Documents\Study Materials\summer25\amcd-shared-repo\hsb-amcd-sose2025-5\content\RAW\redpitayaGraphs\BSF.csv"
bpf_filename =  r"C:\Users\91854\Documents\Study Materials\summer25\amcd-shared-repo\hsb-amcd-sose2025-5\content\RAW\redpitayaGraphs\BPF.csv"

bpf_title = 'Frequency Response of BPF (Gain and Phase)'
bsf_title = 'Frequency Response of BSF (Gain and Phase)'
lpf_title = 'Frequency Response of LPF (Gain and Phase)'
hpf_title = 'Frequency Response of HPF (Gain and Phase)'
filters = {
    bpf_title : ([0,1,2],bpf_filename),
    bsf_title : ([0,1,2],bsf_filename),
    hpf_title : ([0,1,2],hpf_filename),
    lpf_title : ([0,1,2],lpf_filename)
}
for title_internal,attributes in filters.items():    
    fn.freqAnalysisPlot(
        title = title_internal,
        graphsFilename = attributes[1],
        cols = attributes[0],
        seperator = ',',
        invertPhaseGain = False
    )

```

## Transcient Analysis

```{python}
import plotfn as fn

filename = r"C:\Users\91854\Documents\Study Materials\summer25\amcd-shared-repo\Red Pithaya images\Red Pithaya images\HPF_T_500.csv"
title = "something"
fn.transCientAnalysisPlot(title,filename,[0,1,2])

```